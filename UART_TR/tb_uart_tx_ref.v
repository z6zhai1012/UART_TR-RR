 
// *******************************************************************************************************
// ** ä½œè€… ï¼š å­¤ç‹¬çš„å?•åˆ€                                                   			
// ** é‚®ç®± ï¼š zachary_wu93@163.com
// ** å?šå®¢ ï¼š https://blog.csdn.net/wuzhikaidetb 
// ** æ—¥æœŸ ï¼š 2022/07/29	
// ** åŠŸèƒ½ ï¼š 1ã€?å¯¹åŸºäºŽFPGAçš„ä¸²å?£å?‘é€?é©±åŠ¨æ¨¡å?—çš„æµ‹è¯•testbench
//			  2ã€?å?‘é€?ä¸€ä¸ª8bitçš„éš?æœºæ•°æ?®ï¼Œè§‚æµ‹å…¶æ³¢å½¢æ˜¯å?¦ç¬¦å?ˆUARTæ—¶åº?                                        									                                                                          			
// *******************************************************************************************************		
 
`timescale 1ns/1ns	//å®šä¹‰æ—¶é—´åˆ»åº¦
 
module tb_uart_tx_ref();
 
reg 			sys_clk			;			
reg 			sys_rst_n		;			
reg [7:0]		uart_tx_data	;
reg 			uart_tx_en		;
			
wire 	 		uart_txd		;
 
parameter	integer	BPS 	= 'd9600		;			//æ³¢ç‰¹çŽ‡
parameter	integer	CLK_FRE = 'd50_000_000	;			//ç³»ç»Ÿé¢‘çŽ‡50M
 
localparam	integer	BIT_TIME = 'd1000_000_000 / BPS ;	//è®¡ç®—å‡ºä¼ è¾“æ¯?ä¸ªbitæ‰€éœ€è¦?çš„æ—¶é—´
 
initial begin	
	sys_clk <=1'b0;	
	sys_rst_n <=1'b0;		
	uart_tx_en <=1'b0;
	uart_tx_data <=8'd0;				
	#80 										//ç³»ç»Ÿå¼€å§‹å·¥ä½œ
		sys_rst_n <=1'b1;
		
	#200
		@(posedge sys_clk);
		uart_tx_en <=1'b1;	
		uart_tx_data <= ({$random} % 256);		//å?‘é€?8ä½?éš?æœºæ•°æ?®
	#20	
		uart_tx_en <=1'b0;
	
	#(BIT_TIME * 10)							//å?‘é€?1ä¸ªBYTEéœ€è¦?10ä¸ªbit
	#200 $finish;								//ç»“æ?Ÿä»¿çœŸ
end
 
always #10 sys_clk=~sys_clk;					//å®šä¹‰ä¸»æ—¶é’Ÿï¼Œå‘¨æœŸ20nsï¼Œé¢‘çŽ‡50M
 
//ä¾‹åŒ–å?‘é€?é©±åŠ¨æ¨¡å?—
uart_tx_ref #(
	.BPS			(BPS			),		
	.CLK_FRE		(CLK_FRE		)		
)	
uart_tx_ref_inst(	
	.sys_clk		(sys_clk		),			
	.sys_rst_n		(sys_rst_n		),
	
	.uart_tx_data	(uart_tx_data	),			
	.uart_tx_en		(uart_tx_en		),		
	.uart_tx_done	(uart_tx_done	),		
	.uart_txd		(uart_txd		)	
);
 
endmodule 